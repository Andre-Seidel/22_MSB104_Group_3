---
title: "Assignment_econometrics_Malenesr-and-Raojiaxiu"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: true
    number-depth: 3
# documentclass: article
classoption: 
  - '12pt'
  - 'a4paper'
author: 
  - name: Malene Skurtveit Rossnes
    affiliation: 'Master Student HVL'
  - name: Jiaxiu Rao
    affiliation: 'Master Student HVL'
editor: visual
# bibliography: [.bib]
csl: apa-no-ampersand.csl
abstract: 'This assignment will study GDP in the following countries: Germany, Finland and Romania'
---

## Introduction

This assignment consist of four parts where we will explore data sets from Eurostat and perform analysis to find statistic information.

The assignment will be built on as the various tasks are solved and presented as a complete quarto document at the end of the semester.

### Assignment 1

In this first assignment we will study sub-national gdp in the countries Germany, Finland and Romania using the data sets "Nama_10r_3gdp" and "demo_r\_pjanaggr3" obtained from Eurostat.
Below we will present which packages we have used to read and process the data we have used in the task, in addition to showing the procedure for how we have obtained new data.
The results will be presented at the end of the assignment, along with a description and discussion of the included data.

### Description of data sets

There are several packages and datasets we need to use in this assignment.
The packages is listed below :

                    library(tidyverse)
                    library(vtable)
                    library(dineq)

```{r}
#| warning: false
library(tidyverse)
library(vtable)
library(dineq)
library(huxtable)
```

The datafiles "Nama_10r_3gdp" and "Demo_r\_pjanaggr3" contains different data.
Next, we will present the datasets and their content.

Nama_10r_3gdp contains GDP data on nuts3 level for many countries.
The data set is structured in different columns that present different data values.
in this assignment, the following values are relevant to us: The GDP values we are looking for emerges from the column "OBS_VALUE".
The column "geo" tells which geographical region the values belong to.
In the file there are rows for nuts0 to nuts3 level, for instance DE, DE1, DE11 and DE111.
There is also a column for year named "TIME_PERIOD".
There are different types of GDP values and the unit is stored in a column named "UNIT".
We have chosen to use values where unit is MIO_EUR.
This unit represents the GDP value in million euros.
Furthermore, we examine whether the datasets have taken inflation into account using metadata.
Nama_10_3gdp takes inflation into account when it comes to the unit of measure "price figure" in the data set, while volume figures are presented excluding inflation.

Demo_r\_pjanaggr3 contains population data on nuts3 level.
The structure is similar to the previous dataset we presented and contains columns as the other file with the same names for value, region and year.
This file also have multiple values with different groupings.
In the next section we specify which choices we have made regarding which data is used.

There is a column named "age" for age groups.
We have chosen the rows where the age is TOTAL.
Further there is a column for sex and we have choosen rows where sex = T.
T refers to the total value for both males and females.
The data set Demo_r\_pjanaggr3 does not take inflation into account.
The information that emerges from the data set deals with population data, which is not directly covered by inflation.

```{r messages = FALSE}
#| echo: false
#| warning: false

# Reading in data sets and renaming columns

gdpfile <- read_csv('NAMA_10R_3GDP.csv')
populationfile <- read_csv('DEMO_R_PJANAGGR3.csv')
lifexp <- read_csv('DEMO_R_MLIFEXP.csv') %>%
  filter(TIME_PERIOD=="2010" & unit=="YR" & age=="Y_LT1" & sex=="T" & (grepl('DE..', geo) | grepl('FI..', geo) | grepl('RO..', geo))) %>%
  select(unit,geo,age,sex,TIME_PERIOD,OBS_VALUE) %>%
  mutate(lifeexpectancyage = OBS_VALUE, Year=TIME_PERIOD, nuts2=geo) %>%
  select(nuts2,Year,lifeexpectancyage)

education <- read_csv('EDAT_LFSE_04.csv') %>%
  filter(TIME_PERIOD=="2010" & unit=="PC" & isced11=="ED5-8" & age=="Y25-64" & sex=="T" & (grepl('DE..', geo) | grepl('FI..', geo) | grepl('RO..', geo))) %>%
  select(unit,isced11,geo,age,sex,TIME_PERIOD,OBS_VALUE) %>%
  mutate(eduval = OBS_VALUE, Year=TIME_PERIOD, nuts2=geo) %>%
  select(nuts2,Year,eduval)

transport <- read_csv('TRAN_R_NET.csv') %>%
  filter(TIME_PERIOD=="2010" & unit=="KM_TKM2" & tra_infr=="MWAY" & (grepl('DE..', geo) | grepl('FI..', geo) | grepl('RO..', geo))) %>%
  select(unit,tra_infr,geo,TIME_PERIOD,OBS_VALUE) %>%
  mutate(motorway = OBS_VALUE, Year=TIME_PERIOD, nuts2=geo) %>%
  select(nuts2,Year,motorway)

gdpdata <- gdpfile %>%
  rename(Year = TIME_PERIOD, GDP = OBS_VALUE, Region=geo)


populationdata <- populationfile %>%
  rename(Year = TIME_PERIOD, Population = OBS_VALUE, Region = geo)
```

```{r}
# Filter data and join the two datasets

mydata <- gdpdata %>%
  # select only columns we need
  select(Year, Region, GDP, unit) %>%
  # select rows with MIO_EUR and the regions we need
  filter(unit =='MIO_EUR' & (grepl('DE...', Region) | grepl('FI...', Region) | grepl('RO...', Region)))

mydata <- mydata %>%
  # combine gdpr data with population data with the same year and region
  left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year, Region, GDP,Population)

```

As mentioned above, the two data sets consist of different values.
In order for us to be able to use the data that is relevant for our task, we must filter the data so that we are left with the information that is needed further in the task.
The first step is to read in the data sets and name the columns to be used.
Furthermore, the data must be filtered, so that we find the information that is relevant to us.

Above you can see which filters have been used to find the information about the countries in our group: Germany, Finland and Romania.
The data is further combined with population data from the same region and year.
We are now left with a dataset where GDP and population values are combined.
Below you can see what the combination looks like:

```{r}
#| warning: false
#mydata

mydata %>%
    vtable::st(.)
```

We are now left with a data set that has combined the relevant data from both the Nama_10r_3gdp and Demo_r\_pjanaggr3 data sets.
We can use this data set to create plots with GDP and population value to present the values in a structured way.

## Calculate GDP per capita

To calculate GDP per capita we use the following formula: multiplying the GDP value with 1 million since it is in million euro and dividing by the population value.
Below we show how the formula for GDP per capita is used, and the results appear for each nuts3 region for the three countries in the group (Germany, Finland and Romania).

```{r}
mydata <- mydata %>% 
  # select the fields that we need
  mutate(GDPpercapita = 1000000 * GDP / Population) 
```

We are now left with information on GDP per capita in the three regions in our group for each year selected from the data set.
With this information it is possible to filter data so that we can, for example, find the wealthiest and least wealthiest regions for a given year.
To illustrate, we chose the year 2019 to investigate our results.

### GDP per capita for Germany:

```{r}
mydata %>%
  filter(grepl("DE...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```

The three wealthiest regions in Germany are shown below:

```{r}
dedata <- mydata%>%
  filter(grepl("DE...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(dedata, GDPpercapita, n=3)

```

These are the three least wealthiest regions in Germany:

```{r}
slice_min(dedata, GDPpercapita, n=3)

```

There is quite a difference in wealth between regions in Germany.
From the table it appears that it is the regions Wolfsburg (DE913) , Ingolstadt (DE211) and München (DE21H) who are the wealthiest regions in Germany.
The investigation shows that there is more than 10 times higher GDP per capita in the most wealthy regions compared to the least wealthy regions.
Südwestpfalz (DEB3K), Kusel (DEB3G) and Rhein-Pfalz-Kreis (DEB3I) are the least wealthy regions in the country.
Germany is the country with the highest GDP per capita in the given group of countries we investigated.

### GDP per capita for Finland:

```{r}

mydata %>%
  filter(grepl("FI...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```

The three wealthiest regions in Finland are shown below:

```{r}
fidata <- mydata%>%
  filter(grepl("FI...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(fidata, GDPpercapita, n=3)
```

These are the three least wealthiest regions in Finland:

```{r}
slice_min(fidata, GDPpercapita, n=3)

```

From the investigation it appears that the difference between the most and least wealthy regions in Finland are far smaller compared to what we saw in Germany.
Helsinki-Uusimaa (FI1B1), Åland (FI200) and Ostrobothnia (FI195) is the most wealthy regions in Finland.
Compared to the least wealthy regions Etelä-Savo (FI1D1), Päijät-Häme (FI1C3) and Kainuu (FI1D8) we can see that the most wealthy regions is not even twice the value as the least wealthy regions.
The regional differences related to how wealthy the regions are, are not conspicuously large in Finland.

### GDP per capita for Romania:

```{r}
mydata %>%
  filter(grepl("RO...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```

The three wealthiest regions in Romania are shown below:

```{r}
rodata <- mydata%>%
  filter(grepl("RO...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(rodata, GDPpercapita, n=3)

```

These are the three least wealthiest regions in Romania:

```{r}
slice_min(rodata, GDPpercapita, n=3)

```

For Romania there is a big difference between the most and least wealthiest regions.
Bucharest (RO321), Cluj Country (RO113) and Timis Country (RO424) is the most wealthy regions in Romaina.
The least wealthy regions in the country is Vaslui Country (RO216), Giurgiu Country (RO314) and Botosani Country (RO212).
In Romania it becomes clear that the most wealthy region has double the GDP per capita as the second most wealthy.

We can now compare the wealth of the three countries Germany, Finland and Romania using the investigations shown above.
The clearest finding is that Finland differs from the other countries, in that there are smaller differences in GDP per region than what appears in the other two countries.
We can also see clear differences between the countries when it comes to GDP per capita.
Germany has a much higher GDP per capita compared to both Finland and Romania.

### GDP per capita plot

We present the results in a plot, where we collect GDP per capita for all three countries in the same presentation.
This provides a clear presentation of the results, and simplifies the process of comparing the countries' level of GDP per capita.

```{r calculate-gdp-per-capita}
gdppercapita_total <- gdpdata %>%
  select(Year, Region, GDP, unit) %>%
  filter(unit =='MIO_EUR' & (Region %in% c("DE", "FI", "RO"))) %>%
  left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year, Region, GDP,Population) %>%
  mutate(GDPpercapita = 1000000 * GDP / Population) 

  ggplot(gdppercapita_total, aes(x = Year, y=GDPpercapita, fill=Region, color=Region)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

The comparison shows that Germany and Finland are fairly similar in terms of GDP per capita.
There is a large gap between the above-mentioned countries and Romania, where the GDP per inhabitant is lower than the other two countries.

By looking at GDP per capita, the plot will take into account the population of the country and give a realistic picture of the actual level of GDP.
This makes it possible to give a realistic comparison of the countries in our group, even if the countries are of different sizes.
It is far easier to show a realistic representation of GDP in the countries by presenting it in a plot.
here you can clearly see the differences between the countries when factors with an influence on the plot, such as population, are included.

## Calculate GDP Ginie coefficients for nuts2 level

The Ginie coefficient is a measure of statistical dispersion intended to represent the inequality in GDP within a nation.
The coefficient measures the inequality among values of the GDP-level.
The Gini coefficient varies between values from 0 to 1.
A Gini coefficient of 0 expresses perfect equality, where all the values are equal, while a Gini coefficient of 1 expresses maximal inequality among the measured values.

To calculate GDP Ginie coefficients for nuts2 level, we need to get the GDP data for our three countries on a nuts3 level first.
We filter lines by using grepl and create a nuts2 level string using str_sub.
Then we join this with the poulation data from the other file and use gini.wtd and group_by to calculate the coefficients.

```{r}
ginidata <- gdpdata %>%
  select(Year, Region, GDP, unit) %>%
  # only rows with MIO_EUR and Germany NUTS3
  filter(unit =='MIO_EUR' & (grepl('DE...', Region) | grepl('FI...', Region) | grepl('RO...', Region))) %>%
  # create nuts2 column to group by
  mutate(nuts2 = str_sub(Region, 0,4))

ginidata <- ginidata %>%
    # join with population data
    left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year,Region,GDP,Population,nuts2)

ginidata <- ginidata %>%
  # group rows by nuts2 and year
  group_by(nuts2,Year) %>%
  # calculate gini for each group
  summarise(gini = gini.wtd(GDP,Population)) 

```

### Description of Ginie dataset

The new data is presented in a table with three columns: "nuts2 string", "Year" and the "Ginie calculation".
All three countries belonging to our group are presented below in the same table.
The table contains 1020 rows.

```{r}
ginidata

ginidata %>%
  vtable::st(.)
```

### Distribution of GDP Ginie coefficients

By filtering the data shown in the table above, we can present a more clear presentation of the data for each of the three countries included.
In order to present representative data for the Ginie coefficient, we filter the data for each of the countries in our group to only apply for the year 2019.

The following subsections present the Ginie coefficient for Nuts 2 level.
The results is presented below:

#### GDP Ginie coefficients Germany

```{r}
germany <- ginidata %>%
  filter(grepl("DE..", nuts2)) 
  
germany %>%
  vtable::st(.)
```

The three most unequal regions in Germany are:

Oberbayern (DE21), Mittelfranken (DE25) and Darmstadt (DE71).

```{r}
germany2019 <- germany %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(germany2019,gini,n=3)
```

These are the five most equal regions in Germany:

Berlin (DE30), Hamburg (DE60), Chemnitz (DED4), Mecklenburg-Vorpommern (DE80) and Trier (DEB2).

```{r}
slice_min(germany2019, gini, n=5)
```

Berlin and Hamburg are regions with a perfect score of 0.0.
This may be an indicator of missing data in the data set for these regions in the selected time period.
Also see below at point "Outliers in data set" where we search for zero values in all Ginie results to find potential outliers in the data set.

The following plot shows GDP Ginie coefficients for the different regions for all years.
Here we can see how DE21 have a much higher result then the rest.
It also shows which two regions have values equal to zero.

For Germany we see there are some differences in equality between regions.

```{r}
  ggplot(germany, aes(x =Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "Gini")
```

#### GDP Ginie coefficients Finland

```{r}
finland <- ginidata %>%
  filter(grepl("FI..", nuts2))

finland %>%
  vtable::st(.)
```

The three most unequal regions in Finland are:

South Finland (FI1C), North & East Finland (FI1D) and West-Finland (FI19).

```{r}
finland2019 <- finland %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(finland2019,gini,n=3)
```

These are the five most equal regions in Finland:

Helsinki-Uusimaa (FI1B), Åland (FI20), West-Finland (FI19), North & East Finland (FI1D) and South Finland (FI1C).

```{r}
slice_min(finland2019, gini, n=5)
```

We can see from the investigations that there are several of the regions in Finland that repeat themselves as both the least and most equal regions.
On Nuts 2 level, the country is divided into more general and larger areas than at Nuts 3 level.
This will be a factor that is important for several regions appearing again in both tables.

We can see that the regions Helsinki-Uusimaa and Åland have a perfect score of 0.0.
In this case we also suspect that there is a lack of data in the data set.
We investigate this further in the next chapter where we look for potential outliers in the dataset.

The following plot showing all regions in Finland also shows the two regions that have zero values that we need to check.
From the investigations we have carried out, it is clear that there are small differences in equality between regions in Finland.
This also appears clearly in the plot presented below.

```{r}
  ggplot(finland, aes(x = Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "Gini")
```

#### GDP Ginie coefficients Romania

```{r}
romania <- ginidata %>%
  filter(grepl("RO..", nuts2))

romania %>%
  vtable::st(.)
```

The three most unequal regions in Romania are:

Nord-Vest (RO11), Sud-Est (RO22) and Sud-Muntenia (RO31).

```{r}
romania2019 <- romania %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(romania2019,gini,n=3)
```

These are the three most equal regions in Romania:

Bucuresti-Ilfov (RO32), Sud-Vest Oltenia (RO41) and Centru (RO12).

```{r}
slice_min(romania2019, gini, n=3)
```

The max value for Ginie in this country in 2019 is only 0.326.
The differences are not that big in Romania, but a gap still appears between the most and least equal regions in the country.
We can see that no zero values appear in this table.
This indicates that there are no outliers in the data set.
We investigate this further in the next section.

```{r}
  ggplot(romania, aes(x = Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "Gini")
```

## Outliers in data set

An outlier is a term used for a deviant value that stands out from the rest of the values in a data set.
It is difficult to identify deviating values in the graphical presentation of the countries shown above.
However, by checking the data, we have the opportunity to find the values that deviate, so-called data with zero values.

#### Outliers Germany

For Germany there are at least two regions that stick out from the rest when looking at the plot.
By using the following code we find that these two regions are potential outliers in the data set for Germany:

```{r}
germanoutliers <- germany %>%
  filter(gini==0) %>%
  distinct(nuts2)

germanoutliers
```

We can see from the plot that at least two of the regions in Germany seems to be missing date for several years.
Both the graphical representation in the plot and the examination of data through coding shows Berlin (DE30) and Hamburg (DE60) with zero value, and supports the theory that the regions are potential outliers.

#### Outliers Finland

We carry out the same survey for Finland, to uncover potential outliers in the data:

```{r}
finlandoutliers <- finland %>%
  filter(gini==0) %>%
  distinct(nuts2)

finlandoutliers
```

After using the same method as for Germany, we see that it results in two potential outliers for Finland.
By studying the plot, it appears that Åland (FI20) in any case lacks data, and has a zero value for all years.
Both Helsinki-Uusimaa (FI1B) and Åland (FI20) are potential candidates as outliers in the dataset for Finland.

#### Outliers Romania

By carrying out the same procedure as above, no clear outliers emerge for Romania.
There are no values in the data set that clearly differ from the remaining values, either in the plot or by examinations of the table.

```{r}
romaniaoutliers <- romania %>%
  filter(gini==0) %>%
  distinct(nuts2)

romaniaoutliers
```

We can see that there are outliers for both Germany and Finland.
In Romania we have not uncovered any outliers.
It is challenging to confirm which factors lead to the discovery of outliers in the data, but it is likely to think that insufficient information in the data set about the given time period (year) is important for outliers to occur.

## Assignment 2

In Assignment 2 we will study growth and inequity in the three countries we looked at in Assignment 1: Germany, Finland and Romania.
In addition to the datasets used in Assignment 1, we have to load the data sets "demo_r\_mlifexp", "edat_lfse_04", and "tran_r\_net" from Eurostat so that we are able to study the topics growth and inequity.

Below we will present the procedure for processing data, in addition to show the procedure for how new data has been obtained.
The results will be presented at the end of the assignment, along with a description and discussion of the included data.

### Growth and inequity

When we study growth and inequality, it is central to look at the regional development in the countries being studied.
Regional development describes the development within a region by looking at the development within various conditions, such as political, demographic, social and cultural conditions.

-- describe how regional development is calculated/presented by log(gdp per capita) ---

```{r}
# re-generate gdp per capita on a nuts2 level
percapita2 <- gdpdata %>%
  # select rows with MIO_EUR and the regions we need
  filter(Year=="2010" & unit =='MIO_EUR' & (grepl('DE..', Region) |     grepl('FI..', Region) | grepl('RO..', Region))) %>%
  # select only columns we need
  select(Year, Region, GDP, unit) %>%
  left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  mutate(gdp_pc_nuts2 = 1000000 * GDP / Population) %>%
  mutate(nuts2 = Region) %>%
  select(Year, nuts2, gdp_pc_nuts2)

# join in our data with new variables
data2010 <- ginidata %>%
  left_join(education, by = c("Year", "nuts2")) %>%
  left_join(transport, by = c("Year", "nuts2")) %>%
  left_join(lifexp, by = c("Year", "nuts2")) %>%
  left_join(percapita2, by = c("Year", "nuts2")) %>%
  # level of economic development = log(gdp per capita)
  mutate(log_gdppc = log(gdp_pc_nuts2)) %>%
  # create column to easily filter by country
  mutate(nuts0 = substr(nuts2,1,2)) %>%
  filter(Year==2010)

data2010 %>%
  st(.)
```

When looking at the table summarizing the statistics, it appears that there are some Gini values equal to zero.
The Gini coefficient measures statistical dispersion and varies between values from 0 to 1.
The Gini value equal to zero in the table expresses that there are only equal values and expresses perfect equality.
It is likely to think that the zero value in the table may be due to missing data for the selected year under investigation.
This leads us to choose to filter out Gini value equal to zero.

```{r}
data2010 <- data2010 %>%
  filter(gini > 0)

germany2010 <- data2010 %>%
  filter(nuts0=="DE") 
finland2010 <- data2010 %>%
  filter(nuts0=="FI") 
romania2010 <- data2010 %>%
  filter(nuts0=="RO") 

# create function to calculate linear regression model
lm_function_plot <- function(lmdata){
  lm_gdppc <- lm(gini ~ log_gdppc, data = lmdata)
  b1_gdppc <- lm_gdppc$coefficients[1]
  b2_gdppc <- lm_gdppc$coefficients[2]

  # create plot for l.reg. model
  lmdata %>%
    ggplot(aes(x =log_gdppc, y=gini, fill=nuts2, color=nuts2, label=nuts2)) +
    geom_point(lwd = .8) +
    geom_text(hjust=-0.3, vjust=0, check_overlap = FALSE) +
    geom_abline(intercept = b1_gdppc, slope = b2_gdppc, color="blue", size=0.8) + 
    labs(x = "log(GDP per capita)", y = "Gini")
}

# create function to calculate linear regression model
lm_residuals_plot <- function(lmdata){
  lm_gdppc <- lm(gini ~ log_gdppc, data = lmdata)
  b1_gdppc <- lm_gdppc$coefficients[1]
  b2_gdppc <- lm_gdppc$coefficients[2]

  lmdata$predicted <- predict(lm_gdppc)
  lmdata$residuals <- residuals(lm_gdppc)
  
  # create plot for l.reg. model
  lmdata %>%
    ggplot(aes(x =log_gdppc, y=gini, fill=nuts2, color=nuts2)) +
    geom_point(lwd = .8) +
    geom_segment(aes(xend=log_gdppc,yend=predicted)) +
    geom_abline(intercept = b1_gdppc, slope = b2_gdppc, color="blue", size=0.8) + 
    labs(x = "log(GDP per capita)", y = "Gini")
}
```

#### Effect of regional development on regional inequality

To describe the effect of regional development on regional inequality, we will carry out a regression analysis.  Regression analysis is a statistical analysis method for describing the relationship between one or more independent variables and a dependent variable. Wee look at the data we have for the year 2010 on our selected countries, and estimate the effect of regional development on regional inequality using a simple regression model.

```{r}
lm.1 = lm(gini ~ log_gdppc, data = germany2010)
lm.2 = lm(gini ~ log_gdppc, data = finland2010)
lm.3 = lm(gini ~ log_gdppc, data = romania2010)
lm.4 = lm(gini ~ log_gdppc, data = data2010)

#Gen Table
  huxreg(
  list("Germany" = lm.1, "Finland" = lm.2, "Romania" = lm.3, "Total" = lm.4),
  statistics = c(N = "nobs", R2 = "r.squared"),
  coefs = c(log_gdppc = "log_gdppc", const. = "(Intercept)"),
  note = "Note: {stars} T statistics in brackets."
  )
```

#### Goodness of fit

Coefficient of determination R2 is very high for Finland.
However Finland has very few data points available for 2010 with only 3 values.
If we combine the data from all three countries R2 becomes almost zero and there seems to be no good fit for our estimate.
For germany we get R2 = 0.376 and Romania is close with R2 = 0.361.
If we assume that a randomized control trial usually will give R2 \< 0.1 at our estimate is a lot better than that.

Here are the estimates plotted for each country

```{r}
lm_function_plot(germany2010)
```

```{r}
lm_function_plot(finland2010)
```

```{r}
lm_function_plot(romania2010)
```

#### Plot the residuals against the predicted values of your model.

```{r}
lm_residuals_plot(germany2010)
```

```{r}
lm_residuals_plot(finland2010)
```

```{r}
lm_residuals_plot(romania2010)
```

#### Discus the classical assumptions OLS in light of your data and plots

### Other derterminants of inequality

We have chosen the following variables to explore in relationship to regional inequality GINIW:

Life expectancy age in years (demographics category) Amount of motorway in kilometers per thousand square kilometers.
(transport infrastructure category) Amount of persons with higher education in percent (education category)

The reason for choosing these variables are that they could possibly be used indicate how well developed or wealthy the region is.

```{r}
data2010 %>%
  filter(Year==2010 & nuts0=="DE") %>%
ggplot(aes(x =eduval, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Education", y = "Gini")

```

```{r}

multi_linear_regression_model_1 <- function(mlrdata){
lm.1 = lm(gini ~ eduval , mlrdata) 
lm.2 = lm(gini ~  motorway, mlrdata)
lm.3 = lm(gini ~ eduval + motorway, mlrdata)
lm.4 = lm(gini ~  lifeexpectancyage, mlrdata)
lm.5 = lm(gini ~ eduval + lifeexpectancyage, mlrdata)
#Gen Table
  huxreg(
  list("Model 1" = lm.1, "Model 2" = lm.2, "Model 3" = lm.3,"Model 4" = lm.4,"Model 5" = lm.5),
  statistics = c(N = "nobs", R2 = "r.squared"),
  coefs = c(education = "eduval","motorway", life.exp. = "lifeexpectancyage", const. = "(Intercept)"),
  note = "Note: {stars} T statistics in brackets."
  )
}

```

#### Estimate multiple linear regression model for our chosen variables against gini

#### Germany

Estimate multiple linear regression model for germany on the effect the new variables have on gini

```{r}
multi_linear_regression_model_1(germany2010)
```

#### Finland

Estimate multiple linear regression model for Finland on the effect the new variables have on gini

```{r}
multi_linear_regression_model_1(finland2010)
```

#### Romania

Estimate multiple linear regression model for Romania on the effect the new variables have on gini

```{r}
multi_linear_regression_model_1(romania2010)
```

Estimate a multiple linear regression model with you new variables for 2010 and give a small interpretation of your findings.

Discuss the overall fit of your model

Discuss the inference related to your findings

## References

::: {#refs}
:::
