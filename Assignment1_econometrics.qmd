---
title: "Assignment_econometrics_Malenesr-and-Raojiaxiu"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
# documentclass: article
classoption: 
  - '12pt'
  - 'a4paper'
author: 
  - name: Malene Skurtveit Rossnes
    affiliation: 'Master Student HVL'
  - name: Jiaxiu Rao
    affiliation: 'Master Student HVL'
editor: visual
# bibliography: [.bib]
csl: apa-no-ampersand.csl
abstract: 'This assignment will study GDP in the following countries: Germany, Finland and Romania'
---

## Introduction

This assignment consist of four parts where we will explore data sets from Eurostat and perform analysis to find statistic information.

The assignment will be built on as the various tasks are solved and presented as a complete quarto document at the end of the semester.

### Assignment 1

In this first assignment we will study sub-national gdp in the countries Germany, Finland and Romania using the data sets "Nama_10r_3gdp" and "demo_r\_pjanaggr3" obtained from Eurostat.
Below we will present which packages we have used to read and process the data we have used in the task, in addition to showing the procedure for how we have obtained new data.
The results will be presented at the end of the assignment, along with a description and discussion of the included data.

### Description of data sets

There are several packages and datasets we need to use in this assignment.
The packages is listed below :

                    library(tidyverse)
                    library(vtable)
                    library(dineq)

```{r}
library(tidyverse)
library(vtable)
library(dineq)
```

The datafiles "Nama_10r_3gdp" and "Demo_r\_pjanaggr3" contains different data.
Next, we will present the datasets and their content.

Nama_10r_3gdp contains GDP data on nuts3 level for many countries.
The data set is structured in different columns that present different data values.
in this assignment, the following values are relevant to us: The GDP values we are looking for emerges from the column "OBS_VALUE".
The column "geo" tells which geographical region the values belong to.
In the file there are rows for nuts0 to nuts3 level, for instance DE, DE1, DE11 and DE111.
There is also a column for year named "TIME_PERIOD".
There are different types of GDP values and the unit is stored in a column named "UNIT".
We have chosen to use values where unit is MIO_EUR.
This unit represents the GDP value in million euros.
Furthermore, we examine whether the datasets have taken inflation into account using metadata.
Nama_10_3gdp takes inflation into account when it comes to the unit of measure "price figure" in the data set, while volume figures are presented excluding inflation.

Demo_r\_pjanaggr3 contains population data on nuts3 level.
The structure is similar to the previous dataset we presented and contains columns as the other file with the same names for value, region and year.
This file also have multiple values with different groupings.
We specify which choices we have made regarding which data is used:

There is a column named "age" for age groups.
We have chosen the rows where the age is TOTAL.
Further there is a column for sex and we have choosen rows where sex = T.
T refers to the total value for both males and females.
The data set Demo_r\_pjanaggr3 does not take inflation into account.
The information that emerges from the data set deals with population data, which is not directly covered by inflation.

### Reading in data sets and renaming columns

```{r messages = FALSE}
#| echo: false
# read data from files
gdpfile <- read_csv('NAMA_10R_3GDP.csv')
populationfile <- read_csv('DEMO_R_PJANAGGR3.csv')

gdpdata <- gdpfile %>%
  rename(Year = TIME_PERIOD, GDP = OBS_VALUE, Region=geo)


populationdata <- populationfile %>%
  rename(Year = TIME_PERIOD, Population = OBS_VALUE, Region = geo)
```

### Filter data and join the two datasets

```{r}

mydata <- gdpdata %>%
  # select only columns we need
  select(Year, Region, GDP, unit) %>%
  # select rows with MIO_EUR and the regions we need
  filter(unit =='MIO_EUR' & (grepl('DE...', Region) | grepl('FI...', Region) | grepl('RO...', Region)))

mydata <- mydata %>%
  # combine gdpr data with population data with the same year and region
  left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year, Region, GDP,Population)
```

As mentioned above, the two data sets consist of different values.
In order for us to be able to use the data that is relevant for our task, we must filter the data so that we are left with the information that is needed further in the task.
The first step is to read in the data sets and name the columns to be used.
Furthermore, the data must be filtered, so that we find the information that is relevant to us.

Above you can see which filters have been used to find the information about the countries in our group: Germany, Finland and Romania.
The data is further combined with population data from the same region and year.
We are now left with a dataset where GDP and population values are combined.
Below you can see what the combination looks like:

```{r}
mydata

mydata %>%
    vtable::st(.)
```

We are now left with a data set that has combined the relevant data from both the Nama_10r_3gdp and Demo_r\_pjanaggr3 data sets.
We can use this data set to create plots with GDP and population value to present the values in a structured way.

## Calculate GDP per capita

To calculate GDP per capita we use the following formula: We multiply the GDP value with 1 million since it is in million euro and dividing by the population value.
Below we show how the formula for GDP per capita is used, and the results appear for each nuts3 region for the three countries in the group (Germany, Finland and Romania).

```{r}
mydata <- mydata %>% 
  # select the fields that we need
  mutate(GDPpercapita = 1000000 * GDP / Population) 
```

Since we now have GDP per capita for each region, for each year, we can for example find the wealthiest and least wealthiest regioens for a given year.
We chose 2019 to investigate our results.

### GDP per capita for Germany:

```{r}
mydata %>%
  filter(grepl("DE...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```


 The three wealthiest regions in Germany are:

```{r}
dedata <- mydata%>%
  filter(grepl("DE...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(dedata, GDPpercapita, n=3)

```


These are the three least wealthiest regions

```{r}
slice_min(dedata, GDPpercapita, n=3)

```

There is quite a difference in wealth between regions in Germany. There is more than 10 times higher GDP per captia in the most wealthy region compared to the least wealthy.

### GDP per capita for Finland:

```{r}

mydata %>%
  filter(grepl("FI...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```

The three wealthiest regions in Finland are:

```{r}
fidata <- mydata%>%
  filter(grepl("FI...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(fidata, GDPpercapita, n=3)
```

These are the three least wealthiest regions

```{r}
slice_min(fidata, GDPpercapita, n=3)

```

Compared to Germany there is not a big difference between the most and least wealthy regions inside Finland. The most wealthy is not even twice the value as the least wealthy.

### GDP per capita for Romania:

```{r}
mydata %>%
  filter(grepl("RO...", Region)) %>%
  select(-Region) %>%
  vtable::st(.)
```

 The three wealthiest regions in Romania are:

```{r}
rodata <- mydata%>%
  filter(grepl("RO...", Region)) %>%
  filter(Year==2019) %>%
  select(Region, GDPpercapita) %>%
  as.data.frame()

slice_max(rodata, GDPpercapita, n=3)

```

 These are the three least wealthiest regions

```{r}
slice_min(rodata, GDPpercapita, n=3)

```

For Romania there is a big difference between the most and least wealthiest regions. We also see that the most wealthy region has double the GDP per capita as the second most wealthy.

Between the three countries we can see that Finland appears to have a lot less difference in wealth between regions than the other two.

### GDP per capita plot

We present the results in a plot, where we collect GDP per capita for all three countries in the same presentation.
This provides a clear presentation of the results, and simplifies the process of comparing the countries' level of GDP per capita.

```{r}
gdppercapita_total <- gdpdata %>%
  select(Year, Region, GDP, unit) %>%
  filter(unit =='MIO_EUR' & (Region %in% c("DE", "FI", "RO"))) %>%
  left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year, Region, GDP,Population) %>%
  mutate(GDPpercapita = 1000000 * GDP / Population) 

  ggplot(gdppercapita_total, aes(x = Year, y=GDPpercapita, fill=Region, color=Region)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

The comparison shows that Germany and Finland are fairly similar in terms of GDP per capita.
There is a large gap between the above-mentioned countries and Romania, where the GDP per inhabitant is lower than the other two countries.

By looking at GDP per capita, the plot will take into account the population of the country and give a realistic picture of the actual level of GDP.
This makes it possible to give a realistic comparison of the countries in our group, even if the countries are of different sizes.

## Calculate GDP Ginie coefficients for nuts2 level

To calculate GDP Ginie coefficients for nuts2 level, we need to get the GDP data for our three countries on a nuts3 level first.
We filter lines by using grepl and create a nuts2 level string using str_sub.
Then we join this with the poulation data from the other file and use gini.wtd and group_by to calculate the coefficients.

```{r}
ginidata <- gdpdata %>%
  select(Year, Region, GDP, unit) %>%
  # only rows with MIO_EUR and Germany NUTS3
  filter(unit =='MIO_EUR' & (grepl('DE...', Region) | grepl('FI...', Region) | grepl('RO...', Region))) %>%
  # create nuts2 column to group by
  mutate(nuts2 = str_sub(Region, 0,4))

ginidata <- ginidata %>%
    # join with population data
    left_join(populationdata, by=c("Year","Region"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year,Region,GDP,Population,nuts2)

ginidata <- ginidata %>%
  # group rows by nuts2 and year
  group_by(nuts2,Year) %>%
  # calculate gini for each group
  summarise(gini = gini.wtd(GDP,Population)) 

```

### Description of Ginie dataset

The new data is a table with three columns, nuts2 string, Year and the Ginie calculation.
All three countries in our group are in the same table and contains 1020 rows.

```{r}
ginidata

ginidata %>%
  vtable::st(.)
```

### Distribution of GDP Ginie coefficients

By filtering the data shown in the table above, we can present a more clear presentation of the data for each of the three countries included.

#### GDP Ginie coefficients Germany

```{r}
germany <- ginidata %>%
  filter(grepl("DE..", nuts2)) 
  
germany %>%
  vtable::st(.)
```

The three most unequal regions in Germany are:
  
```{r}
germany2019 <- germany %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(germany2019,gini,n=3)
```

These are the five most equal regions
```{r}
slice_min(germany2019, gini, n=5)
```

There are two regions with a perfect score of 0.0. This could be an indicator that there is something wrong or missing in the data set for these regions in the selected year. Also see below where we look for zero values in all Ginie results to find potential outliers.

The following plot shows GDP Ginie coefficients for the different regions for all years.
Here we can see how DE21 have a much higher result then the rest.
We also see the two regions that have a zero value.

For Germany we see there are some differences in equality between regions. 

```{r}
  ggplot(germany, aes(x =Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "GDP")
```

#### GDP Ginie coefficients Finland

```{r}
finland <- ginidata %>%
  filter(grepl("FI..", nuts2))

finland %>%
  vtable::st(.)
```

The three most unequal regions in Finland are:
  
```{r}
finland2019 <- finland %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(finland2019,gini,n=3)
```

These are the five most equal regions
```{r}
slice_min(finland2019, gini, n=5)
```

We can see that Finland also have two regions with a perfect score of 0.0. Here we also suspect that there is something missing in the data set. We investigate this further in then next chapter looking for potential outliers in the dataset.

The following plot showing all regions in Finland also shows the two regions that have zero values that we need to check.

It is clear that there is little difference in equality between regions in Finland.

```{r}
  ggplot(finland, aes(x = Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "GDP")
```

#### GDP Ginie coefficients Romania

```{r}
romania <- ginidata %>%
  filter(grepl("RO..", nuts2))

romania %>%
  vtable::st(.)
```
The three most unequal regions in Romania are:
  
```{r}
romania2019 <- romania %>%
    filter(Year==2019) %>%
   select(nuts2, gini)%>%
  as.data.frame()

slice_max(romania2019,gini,n=3)
```

These are the three most equal regions
```{r}
slice_min(romania2019, gini, n=3)
```


If we plot our results for Romania we do see that one region have a clear improvement from around 2007.
However the max value for Ginie in this country is only 0.379 and the differences are not that big, but still there is a gap between the most and least equal regions.

```{r}
  ggplot(romania, aes(x = Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "GDP")
```

## Outliers in data set

An outlier is a term used for a deviant value that stands out from the rest of the values in a data set.
It is difficult to identify deviating values in the graphical presentation of the countries shown above.
However, by checking the data, we have the opportunity to find the values that deviate, so-called data with zero values.

#### Outliers Germany

For Germany there are at least two regions that stick out from the rest when looking at the plot.
By using the following code we find that these two regions are potential outliers in the data set for Germany:

```{r}
germanoutliers <- germany %>%
  filter(gini==0) %>%
  distinct(nuts2)

germanoutliers
```

We can see from the plot that at least two of the regions in Germany seems to be missing date for several years.
Both the graphical representation in the plot and the examination of data through coding support this theory.

#### Outliers Finland

We are doing the same survey for Finland, to see if there are potential outliers there as well

```{r}
finlandoutliers <- finland %>%
  filter(gini==0) %>%
  distinct(nuts2)

finlandoutliers
```

After using the same method as for Germany, we see that it results in two potential outliers for Finland.
By studying the plot, it appears that FI20 in any case lacks data, and has a zero value for all years.
Both FI1B and FI20 are potential candidates as outliers in the dataset for Finland.

#### Outliers Romania

By carrying out the same procedure as above, no clear outliers emerge for Romania.
There are no values in the data set that clearly differ from the remaining values, either in the plot or by examinations of the table.

```{r}
romaniaoutliers <- romania %>%
  filter(gini==0) %>%
  distinct(nuts2)

romaniaoutliers
```
