---
title: "Assignment1_econometrics_Malenesr-and-Raojiaxiu"
format: html
# documentclass: article
classoption: 
  - '12pt'
  - 'a4paper'
author: 
  - name: Malene Skurtveit Rossnes
    affiliation: 'Master Student HVL'
  - name: Jiaxiu Rao
    affiliation: 'Master Student HVL'
editor: visual
# bibliography: [.bib]
csl: apa-no-ampersand.csl
abstract: 'This assignment will study GDP in the following countries: Germany, Finland and Romania'
---

## Introduction

In this assignment we will study sub-national gdp in the countries Germany, Finland and Romania using the data sets "Nama_10r_3gdp" and "demo_r\_pjanaggr3" obtained from Eurostat.
Below we will show which data we have used in the task, in addition to showing the procedure for how we have obtained new data.
The results will be presented at the end of the assignment, along with a description and discussion of the included data.

There are several packages and datasets we need to use in this assignment.
The packages is listed below :

```{r}
#library(readr)
#library(ggplot2)
library(tidyverse)
library(vtable)
library(dineq)
#library(dplyr)

# read data from files
gdpfile <- read_csv('NAMA_10R_3GDP.csv')
populationfile <- read_csv('DEMO_R_PJANAGGR3.csv')

gdpdata <- gdpfile %>%
  rename(Year = TIME_PERIOD, GDP = OBS_VALUE, Country=geo)


populationdata <- populationfile %>%
  rename(Year = TIME_PERIOD, Population = OBS_VALUE, Country = geo)

mydata <- gdpdata %>%
  # select only columns we need
  select(Year, Country, GDP, unit) %>%
  # select rows with MIO_EUR and the countries we need
  filter(unit =='MIO_EUR' & Country %in% c('DE', 'FI', 'RO'))

mydata <- mydata %>%
  # combine gdpr data with population data with the same year and country
  left_join(populationdata, by=c("Year","Country"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T')
```

## Calculate GDP per capita

```{r}
mydata <- mydata %>% 
  # select the fields that we need
  select(Year, Country, GDP,Population) %>%
  mutate(GDPpercapita = 1000000 * GDP / Population) 
```

## Describe the data (GDP per capita) using the meta data description from Eurostat.

## Report the essential descriptive statistics for you data set (Mean, Min, Max,..:)

### Germany:

```{r}
mydata %>%
  filter(Country=='DE') %>%
  select(-Country) %>%
  vtable::st(.)
```

### Finland:

```{r}

mydata %>%
  filter(Country=='FI') %>%
  select(-Country) %>%
  vtable::st(.)
```

### Romania:

```{r}
mydata %>%
  filter(Country=='RO') %>%
  select(-Country) %>%
  vtable::st(.)
```

### GDPpercapita plot

```{r}
  ggplot(mydata, aes(x = Year, y=GDPpercapita, fill=Country, color=Country)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

### GDP plot

```{r}
  ggplot(mydata, aes(x = Year, y=GDP, fill=Country, color=Country)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP")
```

### Population plot

```{r}
 ggplot(mydata, aes(x = Year, y=Population, fill=Country, color=Country)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "Population")
```

```{r}
germany <- gdpdata %>%
  select(Year, Country, GDP, unit) %>%
  # only rows with MIO_EUR and Germany NUTS3
  filter(unit =='MIO_EUR' & grepl('DE...', Country)) %>%
  # create nuts2 column to group by
  mutate(nuts2 = str_sub(Country, 0,4))

germany

germany <- germany %>%
    # join with population data
    left_join(populationdata, by=c("Year","Country"),
            suffix = c("","_population")) %>%
   # only rows with TOTAL and T from the population data
  filter(age=='TOTAL' & sex=='T') %>%
  select(Year,Country,GDP,Population,nuts2)

germany

germany <- germany %>%
  # group rows by nuts2 and year
  group_by(nuts2,Year) %>%
  # calculate gini for each group
  summarise(gini = gini.wtd(GDP,Population)) 

germany

```

## Describe your new data (derivation, descriptive statistics,...)

```{r}
germany %>%
  vtable::st(.)
```

## Plot the distribution of Ginie coefficients

```{r}
  ggplot(germany, aes(x = Year, y=gini, fill=nuts2, color=nuts2)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP")
```

## Discus briefly if there are not worthy outliers
